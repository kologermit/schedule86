{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sqr",
				"sqrt"
			],
			[
				"Vector",
				"VectorComplex"
			],
			[
				"ma",
				"main"
			]
		]
	},
	"buffers":
	[
		{
			"file": "excel_reader.py",
			"settings":
			{
				"buffer_size": 6108,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFkBAAAAAAAAWgEAAAAAAAAAAAAAWgEAAAAAAABbAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQEAAAAAAABZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"paste",
					null,
					"AQAAAFoBAAAAAAAAZQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgEAAAAAAABaAQAAAAAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"left_delete",
					null,
					"DQAAABUXAAAAAAAAFRcAAAAAAAABAAAALrkWAAAAAAAAuRYAAAAAAAABAAAALnAVAAAAAAAAcBUAAAAAAAABAAAALvMNAAAAAAAA8w0AAAAAAAABAAAALgsNAAAAAAAACw0AAAAAAAABAAAALgAMAAAAAAAAAAwAAAAAAAABAAAALqQLAAAAAAAApAsAAAAAAAABAAAALusHAAAAAAAA6wcAAAAAAAABAAAALrcEAAAAAAAAtwQAAAAAAAABAAAALt0DAAAAAAAA3QMAAAAAAAABAAAALhwDAAAAAAAAHAMAAAAAAAABAAAALhYCAAAAAAAAFgIAAAAAAAABAAAALsIBAAAAAAAAwgEAAAAAAAABAAAALg",
					"AQAAAAAAAAANAAAAwwEAAAAAAADDAQAAAAAAAAAAAAAAAPC/FwIAAAAAAAAXAgAAAAAAAAAAAAAAAPC/HQMAAAAAAAAdAwAAAAAAAAAAAAAAAPC/3gMAAAAAAADeAwAAAAAAAAAAAAAAAPC/uAQAAAAAAAC4BAAAAAAAAAAAAAAAAPC/7AcAAAAAAADsBwAAAAAAAAAAAAAAAPC/pQsAAAAAAAClCwAAAAAAAAAAAAAAAPC/AQwAAAAAAAABDAAAAAAAAAAAAAAAAPC/DA0AAAAAAAAMDQAAAAAAAAAAAAAAAPC/9A0AAAAAAAD0DQAAAAAAAAAAAAAAAPC/cRUAAAAAAABxFQAAAAAAAAAAAAAAAPC/uhYAAAAAAAC6FgAAAAAAAAAAAAAAAPC/FhcAAAAAAAAWFwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "_"
					},
					"DQAAAAkXAAAAAAAAChcAAAAAAAAAAAAArhYAAAAAAACvFgAAAAAAAAAAAABmFQAAAAAAAGcVAAAAAAAAAAAAAOoNAAAAAAAA6w0AAAAAAAAAAAAAAw0AAAAAAAAEDQAAAAAAAAAAAAD5CwAAAAAAAPoLAAAAAAAAAAAAAJ4LAAAAAAAAnwsAAAAAAAAAAAAA5gcAAAAAAADnBwAAAAAAAAAAAACzBAAAAAAAALQEAAAAAAAAAAAAANoDAAAAAAAA2wMAAAAAAAAAAAAAGgMAAAAAAAAbAwAAAAAAAAAAAAAVAgAAAAAAABYCAAAAAAAAAAAAAMIBAAAAAAAAwwEAAAAAAAAAAAAA",
					"AQAAAAAAAAANAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/FQIAAAAAAAAVAgAAAAAAAAAAAAAAAPC/GgMAAAAAAAAaAwAAAAAAAAAAAAAAAPC/2gMAAAAAAADaAwAAAAAAAAAAAAAAAPC/swQAAAAAAACzBAAAAAAAAAAAAAAAAPC/5gcAAAAAAADmBwAAAAAAAAAAAAAAAPC/ngsAAAAAAACeCwAAAAAAAAAAAAAAAPC/+QsAAAAAAAD5CwAAAAAAAAAAAAAAAPC/Aw0AAAAAAAADDQAAAAAAAAAAAAAAAPC/6g0AAAAAAADqDQAAAAAAAAAAAAAAAPC/ZhUAAAAAAABmFQAAAAAAAAAAAAAAAPC/rhYAAAAAAACuFgAAAAAAAAAAAAAAAPC/CRcAAAAAAAAJFwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAAMIBAAAAAAAAwgEAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAwwEAAAAAAADDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAMIBAAAAAAAAwwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAABYCAAAAAAAAFgIAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAFwIAAAAAAAAXAgAAAAAAAAAAAAAAgGBA"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAABYCAAAAAAAAFwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgIAAAAAAAAWAgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"",
					null,
					"DAAAABIXAAAAAAAAKBcAAAAAAAARAAAAYm90X3NlbmRfbWVzc2FnZSi2FgAAAAAAAMwWAAAAAAAAEQAAAGJvdF9zZW5kX21lc3NhZ2UobRUAAAAAAACDFQAAAAAAABEAAABib3Rfc2VuZF9tZXNzYWdlKPANAAAAAAAABg4AAAAAAAARAAAAYm90X3NlbmRfbWVzc2FnZSgIDQAAAAAAAB4NAAAAAAAAEQAAAGJvdF9zZW5kX21lc3NhZ2Uo/QsAAAAAAAATDAAAAAAAABEAAABib3Rfc2VuZF9tZXNzYWdlKKELAAAAAAAAtwsAAAAAAAARAAAAYm90X3NlbmRfbWVzc2FnZSjoBwAAAAAAAP4HAAAAAAAAEQAAAGJvdF9zZW5kX21lc3NhZ2UotAQAAAAAAADKBAAAAAAAABEAAABib3Rfc2VuZF9tZXNzYWdlKNoDAAAAAAAA8AMAAAAAAAARAAAAYm90X3NlbmRfbWVzc2FnZSgZAwAAAAAAAC8DAAAAAAAAEQAAAGJvdF9zZW5kX21lc3NhZ2UoXgEAAAAAAAB0AQAAAAAAABEAAABib3Rfc2VuZF9tZXNzYWdlKA",
					"AQAAAAAAAAABAAAAWQEAAAAAAABZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJUBAAAAAAAAlgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " reply"
					},
					"BgAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgEAAAAAAACWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert_completion",
					{
						"completion": "reply_markup",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "reply_markup"
					},
					"AgAAAJcBAAAAAAAAlwEAAAAAAAAFAAAAcmVwbHmXAQAAAAAAAKMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "=None"
					},
					"BQAAAKMBAAAAAAAApAEAAAAAAAAAAAAApAEAAAAAAAClAQAAAAAAAAAAAAClAQAAAAAAAKYBAAAAAAAAAAAAAKYBAAAAAAAApwEAAAAAAAAAAAAApwEAAAAAAACoAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowEAAAAAAACjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKoBAAAAAAAAqwEAAAAAAAAAAAAAqwEAAAAAAACvAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgEAAAAAAACqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "params"
					},
					"BgAAAK8BAAAAAAAAsAEAAAAAAAAAAAAAsAEAAAAAAACxAQAAAAAAAAAAAACxAQAAAAAAALIBAAAAAAAAAAAAALIBAAAAAAAAswEAAAAAAAAAAAAAswEAAAAAAAC0AQAAAAAAAAAAAAC0AQAAAAAAALUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwEAAAAAAACvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALUBAAAAAAAAtgEAAAAAAAAAAAAAtgEAAAAAAAC3AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQEAAAAAAAC1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALcBAAAAAAAAuAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALgBAAAAAAAAugEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAEAAAAAAAC4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAALkBAAAAAAAAugEAAAAAAAAAAAAAugEAAAAAAAC+AQAAAAAAAAAAAAC+AQAAAAAAAL8BAAAAAAAAAAAAAL8BAAAAAAAAwwEAAAAAAAAAAAAAugEAAAAAAAC6AQAAAAAAAAQAAAAgICAgugEAAAAAAAC+AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQEAAAAAAAC5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAL4BAAAAAAAAwgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgEAAAAAAAC+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMIBAAAAAAAAxAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMIBAAAAAAAAwgEAAAAAAAABAAAAIsIBAAAAAAAAwgEAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAwwEAAAAAAADDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMIBAAAAAAAAxAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "parse_mode"
					},
					"CgAAAMMBAAAAAAAAxAEAAAAAAAAAAAAAxAEAAAAAAADFAQAAAAAAAAAAAADFAQAAAAAAAMYBAAAAAAAAAAAAAMYBAAAAAAAAxwEAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAADIAQAAAAAAAMkBAAAAAAAAAAAAAMkBAAAAAAAAygEAAAAAAAAAAAAAygEAAAAAAADLAQAAAAAAAAAAAADLAQAAAAAAAMwBAAAAAAAAAAAAAMwBAAAAAAAAzQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwEAAAAAAADDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAM4BAAAAAAAAzwEAAAAAAAAAAAAAzwEAAAAAAADQAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgEAAAAAAADOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					2,
					"left_delete",
					null,
					"AgAAAM8BAAAAAAAAzwEAAAAAAAABAAAAOs4BAAAAAAAAzgEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA0AEAAAAAAADQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "L:"
					},
					"AgAAAM4BAAAAAAAAzwEAAAAAAAAAAAAAzwEAAAAAAADQAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgEAAAAAAADOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANABAAAAAAAA0QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AEAAAAAAADQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					3,
					"left_delete",
					null,
					"AwAAANABAAAAAAAA0AEAAAAAAAABAAAAIM8BAAAAAAAAzwEAAAAAAAABAAAAOs4BAAAAAAAAzgEAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAA0QEAAAAAAADRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"left_delete",
					null,
					"AQAAALkBAAAAAAAAuQEAAAAAAAAVAAAACiAgICAgICAgInBhcnNlX21vZGUi",
					"AQAAAAAAAAABAAAAzgEAAAAAAAC5AQAAAAAAAAAAAAAAoGRA"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAL8BAAAAAAAAwAEAAAAAAAAAAAAAwAEAAAAAAADEAQAAAAAAAAAAAADEAQAAAAAAAMUBAAAAAAAAAAAAAMUBAAAAAAAAxgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwEAAAAAAAC/AQAAAAAAAAAAAAAAwFxA"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " par"
					},
					"BAAAAMYBAAAAAAAAxwEAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAADIAQAAAAAAAMkBAAAAAAAAAAAAAMkBAAAAAAAAygEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgEAAAAAAADGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert_completion",
					{
						"completion": "parse_mode",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "parse_mode"
					},
					"AgAAAMcBAAAAAAAAxwEAAAAAAAADAAAAcGFyxwEAAAAAAADRAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygEAAAAAAADKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAANEBAAAAAAAA0gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QEAAAAAAADRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAANIBAAAAAAAA0wEAAAAAAAAAAAAA0wEAAAAAAADXAQAAAAAAAAAAAADXAQAAAAAAANsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gEAAAAAAADSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAANsBAAAAAAAA3QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wEAAAAAAADbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAANsBAAAAAAAA2wEAAAAAAAABAAAAItsBAAAAAAAA2wEAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA3AEAAAAAAADcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "pa"
					},
					"AgAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wEAAAAAAADbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert_completion",
					{
						"completion": "parse_mode",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "parse_mode"
					},
					"AgAAANsBAAAAAAAA2wEAAAAAAAACAAAAcGHbAQAAAAAAAOUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QEAAAAAAADdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAOUBAAAAAAAA5wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QEAAAAAAADlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAOYBAAAAAAAA6AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gEAAAAAAADmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "par"
					},
					"AwAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA6AEAAAAAAADpAQAAAAAAAAAAAADpAQAAAAAAAOoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wEAAAAAAADnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert_completion",
					{
						"completion": "parse_mode",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "parse_mode"
					},
					"AgAAAOcBAAAAAAAA5wEAAAAAAAADAAAAcGFy5wEAAAAAAADxAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gEAAAAAAADqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPMBAAAAAAAA9AEAAAAAAAAAAAAA9AEAAAAAAAD1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wEAAAAAAADzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " pa"
					},
					"AwAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA9gEAAAAAAAD3AQAAAAAAAAAAAAD3AQAAAAAAAPgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QEAAAAAAAD1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert_completion",
					{
						"completion": "parse_mode",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "parse_mode"
					},
					"AgAAAPYBAAAAAAAA9gEAAAAAAAACAAAAcGH2AQAAAAAAAAACAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AEAAAAAAAD4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAACAAAAAAAAAQIAAAAAAAAAAAAAAQIAAAAAAAAJAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"left_delete",
					null,
					"AQAAAAUCAAAAAAAABQIAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAACQIAAAAAAAAJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "id"
					},
					"AgAAAAUCAAAAAAAABgIAAAAAAAAAAAAABgIAAAAAAAAHAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQIAAAAAAAAFAgAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcCAAAAAAAACAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwIAAAAAAAAHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					2,
					"left_delete",
					null,
					"AgAAAAcCAAAAAAAABwIAAAAAAAABAAAAIAYCAAAAAAAABgIAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAACAIAAAAAAAAIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAAYCAAAAAAAABwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgIAAAAAAAAGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " re"
					},
					"AwAAAAcCAAAAAAAACAIAAAAAAAAAAAAACAIAAAAAAAAJAgAAAAAAAAAAAAAJAgAAAAAAAAoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwIAAAAAAAAHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "pl"
					},
					"AgAAAAoCAAAAAAAACwIAAAAAAAAAAAAACwIAAAAAAAAMAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgIAAAAAAAAKAgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert_completion",
					{
						"completion": "reply_markup",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "reply_markup"
					},
					"AgAAAAgCAAAAAAAACAIAAAAAAAAEAAAAcmVwbAgCAAAAAAAAFAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAIAAAAAAAAMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAABQCAAAAAAAAFQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAIAAAAAAAAUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "\npa"
					},
					"BQAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAaAgAAAAAAAAAAAAAaAgAAAAAAAB4CAAAAAAAAAAAAAB4CAAAAAAAAHwIAAAAAAAAAAAAAHwIAAAAAAAAgAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQIAAAAAAAAVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert_completion",
					{
						"completion": "parse_mode",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "parse_mode"
					},
					"AgAAAB4CAAAAAAAAHgIAAAAAAAACAAAAcGEeAgAAAAAAACgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAIAAAAAAAAgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					7,
					"left_delete",
					null,
					"BwAAAOQBAAAAAAAA5AEAAAAAAAABAAAAZeMBAAAAAAAA4wEAAAAAAAABAAAAZOIBAAAAAAAA4gEAAAAAAAABAAAAb+EBAAAAAAAA4QEAAAAAAAABAAAAbeABAAAAAAAA4AEAAAAAAAABAAAAX98BAAAAAAAA3wEAAAAAAAABAAAAZd4BAAAAAAAA3gEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA5QEAAAAAAADlAQAAAAAAAAAAAAAAgGJA"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "ams"
					},
					"AwAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAADgAQAAAAAAAOEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gEAAAAAAADeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "ams"
					},
					"BAAAAB0CAAAAAAAAHgIAAAAAAAAAAAAAHgIAAAAAAAAeAgAAAAAAAAcAAABzZV9tb2RlHgIAAAAAAAAfAgAAAAAAAAAAAAAfAgAAAAAAACACAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACACAAAAAAAAIgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAIAAAAAAAAgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAACECAAAAAAAAIwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQIAAAAAAAAhAgAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "repl"
					},
					"BAAAACICAAAAAAAAIwIAAAAAAAAAAAAAIwIAAAAAAAAkAgAAAAAAAAAAAAAkAgAAAAAAACUCAAAAAAAAAAAAACUCAAAAAAAAJgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgIAAAAAAAAiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert_completion",
					{
						"completion": "reply_markup",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "reply_markup"
					},
					"AgAAACICAAAAAAAAIgIAAAAAAAAEAAAAcmVwbCICAAAAAAAALgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgIAAAAAAAAmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADACAAAAAAAAMQIAAAAAAAAAAAAAMQIAAAAAAAAyAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAIAAAAAAAAwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " repl"
					},
					"BQAAADICAAAAAAAAMwIAAAAAAAAAAAAAMwIAAAAAAAA0AgAAAAAAAAAAAAA0AgAAAAAAADUCAAAAAAAAAAAAADUCAAAAAAAANgIAAAAAAAAAAAAANgIAAAAAAAA3AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgIAAAAAAAAyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert_completion",
					{
						"completion": "reply_markup",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "reply_markup"
					},
					"AgAAADMCAAAAAAAAMwIAAAAAAAAEAAAAcmVwbDMCAAAAAAAAPwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwIAAAAAAAA3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "\nbot.se"
					},
					"CgAAAEgCAAAAAAAASQIAAAAAAAAAAAAASQIAAAAAAABNAgAAAAAAAAAAAABNAgAAAAAAAFECAAAAAAAAAAAAAFECAAAAAAAAUQIAAAAAAACaAAAACiAgICAgICAgaWYgcGFyc2VfbW9kZToKICAgICAgICAgICAgYm90LnNlbmRfbWVzc2FnZSh1c2VyX2lkLCBtZXNzYWdlLCBwYXJzZV9tb2RlPXBhcnNlX21vZGUpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgYm90LnNlbmRfbWVzc2FnZSh1c2VyX2lkLCBtZXNzYWdlKVECAAAAAAAAUgIAAAAAAAAAAAAAUgIAAAAAAABTAgAAAAAAAAAAAABTAgAAAAAAAFQCAAAAAAAAAAAAAFQCAAAAAAAAVQIAAAAAAAAAAAAAVQIAAAAAAABWAgAAAAAAAAAAAABWAgAAAAAAAFcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gIAAAAAAABIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert_completion",
					{
						"completion": "send_message",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "send_message"
					},
					"AgAAAFUCAAAAAAAAVQIAAAAAAAACAAAAc2VVAgAAAAAAAGECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwIAAAAAAABXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGECAAAAAAAAYwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQIAAAAAAABhAgAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "user_id,"
					},
					"CAAAAGICAAAAAAAAYwIAAAAAAAAAAAAAYwIAAAAAAABkAgAAAAAAAAAAAABkAgAAAAAAAGUCAAAAAAAAAAAAAGUCAAAAAAAAZgIAAAAAAAAAAAAAZgIAAAAAAABnAgAAAAAAAAAAAABnAgAAAAAAAGgCAAAAAAAAAAAAAGgCAAAAAAAAaQIAAAAAAAAAAAAAaQIAAAAAAABqAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgIAAAAAAABiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": " messae"
					},
					"BwAAAGoCAAAAAAAAawIAAAAAAAAAAAAAawIAAAAAAABsAgAAAAAAAAAAAABsAgAAAAAAAG0CAAAAAAAAAAAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABvAgAAAAAAAAAAAABvAgAAAAAAAHACAAAAAAAAAAAAAHACAAAAAAAAcQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagIAAAAAAABqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					2,
					"left_delete",
					null,
					"AgAAAHACAAAAAAAAcAIAAAAAAAABAAAAZW8CAAAAAAAAbwIAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAcQIAAAAAAABxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "age,"
					},
					"BAAAAG8CAAAAAAAAcAIAAAAAAAAAAAAAcAIAAAAAAABxAgAAAAAAAAAAAABxAgAAAAAAAHICAAAAAAAAAAAAAHICAAAAAAAAcwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwIAAAAAAABvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMCAAAAAAAAdAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwIAAAAAAABzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "asd"
					},
					"AwAAAHQCAAAAAAAAdQIAAAAAAAAAAAAAdQIAAAAAAAB2AgAAAAAAAAAAAAB2AgAAAAAAAHcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAIAAAAAAAB0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					3,
					"left_delete",
					null,
					"AwAAAHYCAAAAAAAAdgIAAAAAAAABAAAAZHUCAAAAAAAAdQIAAAAAAAABAAAAc3QCAAAAAAAAdAIAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAdwIAAAAAAAB3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "**p"
					},
					"AwAAAHQCAAAAAAAAdQIAAAAAAAAAAAAAdQIAAAAAAAB2AgAAAAAAAAAAAAB2AgAAAAAAAHcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAIAAAAAAAB0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "ara"
					},
					"AwAAAHcCAAAAAAAAeAIAAAAAAAAAAAAAeAIAAAAAAAB5AgAAAAAAAAAAAAB5AgAAAAAAAHoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwIAAAAAAAB3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert_completion",
					{
						"completion": "params",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "params"
					},
					"AgAAAHYCAAAAAAAAdgIAAAAAAAAEAAAAcGFyYXYCAAAAAAAAfAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegIAAAAAAAB6AgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "gmail.py",
			"settings":
			{
				"buffer_size": 4140,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"paste",
					null,
					"AgAAALcBAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAAKAwAAAAAAABABAABkZWYgYm90X3NlbmRfbWVzc2FnZShib3QsIHVzZXJfaWQsIG1lc3NhZ2UsIHBhcnNlX21vZGU9Tm9uZSk6CiAgICB0cnk6CiAgICAgICAgaWYgcGFyc2VfbW9kZToKICAgICAgICAgICAgYm90LnNlbmRfbWVzc2FnZSh1c2VyX2lkLCBtZXNzYWdlLCBwYXJzZV9tb2RlPXBhcnNlX21vZGUpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgYm90LnNlbmRfbWVzc2FnZSh1c2VyX2lkLCBtZXNzYWdlKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgcHJpbnQoZXJyKQ",
					"AQAAAAAAAAABAAAAxwIAAAAAAAC3AQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/C/Users/kologermit/Documents/docker containers/mysql/docker-compose.yml",
			"settings":
			{
				"buffer_size": 356,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "env.py",
			"settings":
			{
				"buffer_size": 118,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "mysd"
					},
					"BAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAAMAAAAAAAAAAwAAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "wl"
					},
					"AgAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					2,
					"left_delete",
					null,
					"AgAAAAQAAAAAAAAABAAAAAAAAAABAAAAbAMAAAAAAAAAAwAAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "ql"
					},
					"AgAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAgAAAAAAAAACgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB8AAAAAAAAAA0AAABteXNxbCA9IHsKCQp9",
					"AQAAAAAAAAABAAAAAAAAAAAAAAANAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "root"
					},
					"BQAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYAAAAAAAAAAoAAABrb2xvZ2VybWl0GAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"paste",
					null,
					"AgAAAC8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAA0AAABnb29nbGUuY08xMjIx",
					"AQAAAAAAAAABAAAALwAAAAAAAAA8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "quete"
					},
					"BgAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABuAAAAAAAAAAoAAABzY2hlZHVsZTg2bgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQAAAAAAAAB3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					3,
					"left_delete",
					null,
					"AwAAAHEAAAAAAAAAcQAAAAAAAAABAAAAZXAAAAAAAAAAcAAAAAAAAAABAAAAdG8AAAAAAAAAbwAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "ote"
					},
					"AwAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwAAAAAAAABvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAHIAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "main.py",
			"settings":
			{
				"buffer_size": 41561,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"paste",
					null,
					"AgAAAEkBAAAAAAAAnAIAAAAAAAAAAAAAnAIAAAAAAACcAgAAAAAAABABAABkZWYgYm90X3NlbmRfbWVzc2FnZShib3QsIHVzZXJfaWQsIG1lc3NhZ2UsIHBhcnNlX21vZGU9Tm9uZSk6CiAgICB0cnk6CiAgICAgICAgaWYgcGFyc2VfbW9kZToKICAgICAgICAgICAgYm90LnNlbmRfbWVzc2FnZSh1c2VyX2lkLCBtZXNzYWdlLCBwYXJzZV9tb2RlPXBhcnNlX21vZGUpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgYm90LnNlbmRfbWVzc2FnZSh1c2VyX2lkLCBtZXNzYWdlKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgcHJpbnQoZXJyKQ",
					"AQAAAAAAAAABAAAAWQIAAAAAAABJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAnAIAAAAAAACcAgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++11/C++11.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				],
				[
					"Packages/User/cpp.sublime-build",
					""
				]
			],
			[
				"Packages/User/cpp.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Object Pascal/Object Pascal.sublime-build",
					""
				],
				[
					"Packages/Object Pascal/Object Pascal.sublime-build",
					"Run"
				],
				[
					"Packages/Object Pascal/Object Pascal.sublime-build",
					"Build and Run"
				],
				[
					"Packages/User/cpp.sublime-build",
					""
				]
			],
			[
				"Packages/Object Pascal/Object Pascal.sublime-build",
				"Build and Run"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/browser.sublime-build",
					""
				],
				[
					"Packages/User/cpp.sublime-build",
					""
				],
				[
					"Packages/User/docker_compose_up_build.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/cpp.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"git push",
				"Git: Push"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"the",
				"UI: Select Theme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/kologermit/Documents/Python/schedule86"
	],
	"file_history":
	[
		"/C/Users/kologermit/Documents/Python/schedule86/gmail.py",
		"/C/Users/kologermit/Documents/Python/schedule86/main.py",
		"/C/Users/kologermit/Documents/udsu/donated_problems/27.12.2022/4.pas",
		"/C/Users/kologermit/Documents/udsu/donated_problems/.gitignore",
		"/C/Users/kologermit/Documents/udsu/donated_problems/27.12.2022/VectorComplexCalculator.pas",
		"/C/Users/kologermit/Documents/udsu/donated_problems/27.12.2022/ComplexCalculator.pas",
		"/C/Users/kologermit/Documents/udsu/osn_ler/ComplexCalculator.pas",
		"/C/Users/kologermit/Documents/udsu/osn_ler/menu.pas",
		"/C/Users/kologermit/Documents/udsu/osn_ler/sin.pas",
		"/C/Users/kologermit/AppData/Roaming/Sublime Text/Packages/User/cpp.sublime-build",
		"/C/cmd_commands/cpp-compieler.cpp",
		"/C/cmd_commands/exe-runner.cpp",
		"/C/Users/kologermit/Downloads/Telegram Desktop/bot.py",
		"/C/Users/kologermit/.ssh/known_hosts",
		"/C/Users/kologermit/.ssh/id_rsa.pub",
		"/C/Users/kologermit/Desktop/main.cpp",
		"/C/Users/kologermit/Downloads/SFML-2.5.1-windows-vc15-64-bit/SFML-2.5.1/examples/pong/Pong.cpp",
		"/C/Program Files/Sublime Text 3/Packages/C++.sublime-package",
		"/C/Users/kologermit/Desktop/ahaha"
	],
	"find":
	{
		"height": 39.3333333333
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"bot_send_message(",
			"def bot_send_message(",
			"bot.",
			"bot.send_message",
			"bot.",
			"bot.send_message",
			"bot.send",
			"bot"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bot_send_message(bot, ",
			"def bot_send_message(bot, "
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "excel_reader.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6108,
						"regions":
						{
						},
						"selection":
						[
							[
								685,
								346
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "gmail.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4140,
						"regions":
						{
						},
						"selection":
						[
							[
								778,
								778
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/kologermit/Documents/docker containers/mysql/docker-compose.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 356,
						"regions":
						{
						},
						"selection":
						[
							[
								205,
								205
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "env.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 118,
						"regions":
						{
						},
						"selection":
						[
							[
								115,
								115
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "main.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41561,
						"regions":
						{
						},
						"selection":
						[
							[
								668,
								668
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.3333333333
	},
	"input":
	{
		"height": 39.3333333333
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 460.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 126.0
	},
	"pinned_build_system": "",
	"project": "schedule86.sublime-project",
	"replace":
	{
		"height": 50.6666666667
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 166.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
